name: Rotate access and refresh tokens

on:
  # Runs every Sunday at 5:00 AM UTC
  schedule:
    - cron: '0 5 * * 0'

  workflow_dispatch:

jobs:
  update_tokens:
    name: Update access and refresh tokens
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get and save Public Key
        id: getPublicKeyId
        run: |
          public_key_info=$(curl -X GET \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $ACCESS_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/unlimit1984/home-expenses/actions/secrets/public-key)
          keyId=$(echo "$public_key_info" | jq -r '.key_id')
          key=$(echo "$public_key_info" | jq -r '.key')
          echo repoKeyId="$keyId" >> $GITHUB_OUTPUT
          echo repoKey="$key" >> $GITHUB_OUTPUT
        env:
          ACCESS_TOKEN: ${{ secrets.GH_PAT_SECRETS }}

#      - name: Print repo public key
#        run: |
#          echo "Repo public keyId: ${{ steps.getPublicKeyId.outputs.repoKeyId }}"
#          echo "Repo public key: ${{ steps.getPublicKeyId.outputs.repoKey }}"

      - name: Print secret before update
        run: |
          echo ${{ secrets.TEST_SECRET }} | sed 's/./& /g'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Generate secret
        run: |
          echo secretValue=$(node ./code/js_files/generate_secret_value.js) >> $GITHUB_ENV

      - name: Encrypt new secret via libsodium lib
        run: |
          npm i libsodium-wrappers
          echo encryptedSecretValue=$(node ./code/js_files/get_encrypted_secret.js $secretValue ${{ steps.getPublicKeyId.outputs.repoKey }}) >> $GITHUB_ENV

#      - name: Print encrypted secret
#        run: |
#          echo "Encrypted secret value: [$encryptedSecretValue]"

#      - name: Update Secret
#        run: |
#          echo $newValEncoded
#          echo ${{ env.newValEncoded }}
#
          curl -X PUT \
            -H 'Authorization: Bearer ${{ secrets.GH_PAT_SECRETS }}' \
            -H 'Accept: application/vnd.github.v3+json' \
            -d '{"encrypted_value":"$encryptedSecretValue","key_id":"${{ steps.getPublicKeyId.outputs.repoKeyId }}"}' \
            https://api.github.com/repos/unlimit1984/home-expenses/actions/secrets/TEST_SECRET

      - name: Print secret after update
        run: |
          echo ${{ secrets.TEST_SECRET }} | sed 's/./& /g'
